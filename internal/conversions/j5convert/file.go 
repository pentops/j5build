package j5convert

import (
	"sort"
	"strings"

	"google.golang.org/protobuf/types/descriptorpb"
)

type FileBuilder struct {
	fdp *descriptorpb.FileDescriptorProto
}

func newFileBuilder(name string) *FileBuilder {
	pkgName := PackageFromFilename(name)
	return &FileBuilder{
		fdp: &descriptorpb.FileDescriptorProto{
			Syntax:  ptr("proto3"),
			Package: ptr(pkgName),
			Name:    ptr(name),
			Options: &descriptorpb.FileOptions{},
			SourceCodeInfo: &descriptorpb.SourceCodeInfo{
				Location: []*descriptorpb.SourceCodeInfo_Location{{
					Path:            []int32{},
					Span:            []int32{1, 1, 1},
					LeadingComments: ptr(" Code generated by j5convert. DO NOT EDIT.\n"),
				}},
			},
		},
	}
}

func (fb *FileBuilder) File() *descriptorpb.FileDescriptorProto {
	last := int32(1)
	for _, loc := range fb.fdp.SourceCodeInfo.Location {
		last += 2
		loc.Span = []int32{last, 1, 1}
	}

	return fb.fdp
}

func (fb *FileBuilder) ensureImport(importPath string) {

	if importPath == "" {
		panic("empty alias")
	}
	if !strings.Contains(importPath, "/") {
		panic("invalid import path " + importPath)
	}

	if importPath == *fb.fdp.Name {
		return
	}
	for _, imp := range fb.fdp.Dependency {
		if imp == importPath {
			return
		}
	}
	fb.fdp.Dependency = append(fb.fdp.Dependency, importPath)
	sort.Strings(fb.fdp.Dependency)
}

func (fb *FileBuilder) addMessage(message *MessageBuilder) {
	idx := int32(len(fb.fdp.MessageType))
	path := []int32{4, idx}

	for _, comment := range message.commentSet {
		fb.fdp.SourceCodeInfo.Location = append(fb.fdp.SourceCodeInfo.Location, &descriptorpb.SourceCodeInfo_Location{
			Path:             append(path, comment.Path...),
			LeadingComments:  comment.LeadingComments,
			TrailingComments: comment.TrailingComments,
		})
	}

	fb.fdp.MessageType = append(fb.fdp.MessageType, message.descriptor)
}

func (fb *FileBuilder) addEnum(enum *EnumBuilder) {
	idx := int32(len(fb.fdp.EnumType))
	path := []int32{5, idx}

	for _, comment := range enum.commentSet {
		fb.fdp.SourceCodeInfo.Location = append(fb.fdp.SourceCodeInfo.Location, &descriptorpb.SourceCodeInfo_Location{
			Path:             append(path, comment.Path...),
			LeadingComments:  comment.LeadingComments,
			TrailingComments: comment.TrailingComments,
		})
	}

	fb.fdp.EnumType = append(fb.fdp.EnumType, enum.desc)
}

func (fb *FileBuilder) addService(service *ServiceBuilder) {
	idx := int32(len(fb.fdp.Service))
	path := []int32{6, idx}
	for _, comment := range service.commentSet {
		fb.fdp.SourceCodeInfo.Location = append(fb.fdp.SourceCodeInfo.Location, &descriptorpb.SourceCodeInfo_Location{
			Path:             append(path, comment.Path...),
			LeadingComments:  comment.LeadingComments,
			TrailingComments: comment.TrailingComments,
		})
	}

	fb.fdp.Service = append(fb.fdp.Service, service.desc)
}
